scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

extend type Query {
    users: [User!]! @paginate(model: "App\\Modules\\User\\Models\\User")
    userById(id: ID @eq): User @find(model: "App\\Modules\\User\\Models\\User")
    permissions: [Permission!]! @paginate(model: "App\\Modules\\User\\Models\\Permission")
    permissionById(id: ID @eq): Permission @find(model: "App\\Modules\\User\\Models\\Permission")
}

type Mutation {
    upsertUser(
        input: UpsertUserInput! @spread
    ): User

    deleteUser(id: ID! @whereKey): User!
    permissionUpsert(input: PermissionUpsertInput @spread): Permission! @field(resolver: "App\\GraphQL\\Mutations\\User\\PermissionMutation@upsert")
    permissionDelete(id: ID! @wherekey): Permission! @field(resolver: "App\\GraphQL\\Mutations\\User\\PermissionMutation@destroy")
}

input UpsertUserInput @validator {
    id: ID
    name: String
    firstname: String
    lastname: String
    email: String
    phone: String
    password: String
    status: String
}

input PermissionUpsertInput {
    id: ID
    name: String
}

type User {
    id: ID!
    name: String
    firstname: String
    lastname: String
    email: String!
    phone: String
    status: String!
    email_verified_at: DateTime
    created_at: DateTime!
    updated_at: DateTime!
}

type Permission {
    id: ID!
    name: String!
    slug: String
}
